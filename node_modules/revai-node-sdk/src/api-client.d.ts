/// <reference types="node" />
import { Readable } from 'stream';
import { ApiRequestHandler } from './api-request-handler';
import { CaptionType } from './models/async/CaptionType';
import { RevAiAccount } from './models/async/RevAiAccount';
import { RevAiJobOptions } from './models/async/RevAiJobOptions';
import { RevAiApiJob } from './models/RevAiApiJob';
import { RevAiApiTranscript } from './models/RevAiApiTranscript';
export declare class RevAiApiClient {
    apiHandler: ApiRequestHandler;
    constructor(accessToken: string, version?: string);
    getAccount(): Promise<RevAiAccount>;
    getJobDetails(id: string): Promise<RevAiApiJob>;
    getListOfJobs(limit?: number, startingAfter?: string): Promise<RevAiApiJob[]>;
    deleteJob(id: string): Promise<void>;
    submitJobUrl(mediaUrl: string, options?: RevAiJobOptions): Promise<RevAiApiJob>;
    submitJobLocalFile(filename: string, options?: RevAiJobOptions): Promise<RevAiApiJob>;
    getTranscriptObject(id: string): Promise<RevAiApiTranscript>;
    getTranscriptObjectStream(id: string): Promise<Readable>;
    getTranscriptText(id: string): Promise<string>;
    getTranscriptTextStream(id: string): Promise<Readable>;
    getCaptions(id: string, contentType?: CaptionType, channelId?: number): Promise<Readable>;
}
